@font-face {
  font-family: "League Spartan Variable";
  src: url("/themes/custom/drupalnyc/fonts/LeagueSpartan/variable/WOFF2/LeagueSpartan-VF.woff2") format("woff2-variations");
  font-weight: 200 900;
}
:root {
  --dnyc-grid-gap: 24px;
}
@media (min-width: 992px) {
  :root {
    --dnyc-grid-gap: 40px;
  }
}

:root {
  --dnyc-width-xxlarge: 1920px;
  --dnyc-width-xlarge: 1440px;
  --dnyc-width-large: 1280px;
  --dnyc-width-medium: 960px;
  --dnyc-width-small: 768px;
  --dnyc-width-xsmall: 640px;
  --dnyc-width-xxsmall: 480px;
}

:root {
  --dnyc-zindex-super: 100;
  --dnyc-zindex-top: 90;
  --dnyc-zindex-over: 10;
  --dnyc-zindex-default: 1;
  --dnyc-zindex-under: -1;
  --dnyc-zindex-bottom: -9999px;
}

.align-left {
  margin: 0 var(--dnyc-grid-gap) var(--dnyc-grid-gap) 0;
}

.align-right {
  margin: 0 0 var(--dnyc-grid-gap) var(--dnyc-grid-gap);
}

.align-center {
  margin: var(--dnyc-grid-gap) auto;
}

[class*=l-flex] > * {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  margin: calc(var(--dnyc-grid-gap) / 2 * -1) calc(var(--dnyc-grid-gap) / 2 * -1);
}

[class*=l-flex] > * > * {
  margin: calc(var(--dnyc-grid-gap) / 2) calc(var(--dnyc-grid-gap) / 2);
}

.l-flex__alignment--start > * {
  justify-content: flex-start;
}

.l-flex__alignment--center > * {
  justify-content: center;
}

.l-flex__alignment--end > * {
  justify-content: flex-end;
}

.l-flex__alignment--end > * {
  justify-content: flex-end;
}

.l-flex__no-wrap > * {
  flex-wrap: nowrap;
}

[class*=l-constrained] {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--dnyc-width-xlarge);
  width: 100%;
}

[class*=l-constrained] [class*=l-constrained] {
  margin-left: 0;
  margin-right: 0;
}

.l-constrained {
  max-width: var(--dnyc-width-xlarge);
}

.l-constrained__width--narrow {
  max-width: var(--dnyc-width-medium);
}

.l-constrained__width--wide {
  max-width: var(--dnyc-width-xxlarge);
}

.l-constrained__width--full {
  width: 100%;
}

@media (min-width: 768px) {
  .l-grid .l-grid__inner {
    display: flex;
    flex-flow: nowrap row;
    margin: 0 -var(--dnyc-grid-gap);
  }
}
.l-grid .l-grid__inner > * + * {
  margin-top: var(--dnyc-grid-gap);
}
.l-grid .l-grid__inner .l-grid__item {
  flex-shrink: 0;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item {
    padding: 0 var(--dnyc-grid-gap);
  }
}
.l-grid .l-grid__inner .l-grid__item--col-2 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-2 {
    width: 16.6666666667%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-3 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-3 {
    width: 25%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-4 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-4 {
    width: 33.3333333333%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-5 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-5 {
    width: 41.6666666667%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-6 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-6 {
    width: 50%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-7 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-7 {
    width: 58.3333333333%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-8 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-8 {
    width: 66.6666666667%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-9 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-9 {
    width: 75%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-10 {
  width: 100%;
}
@media (min-width: 768px) {
  .l-grid .l-grid__inner .l-grid__item--col-10 {
    width: 83.3333333333%;
  }
}

[class*=l-stack] > * {
  margin-top: 0;
  margin-bottom: 0;
}

[class*=l-stack] > * + * {
  margin-top: var(--space-gap-y);
}

.l-stack__ruled > * + * {
  padding-top: var(--space-gap-y);
  border-top: var(--size-border, 1px) var(--style-border, solid) var(--color-border);
}

.l-stack__none > * + * {
  margin-top: 0;
}

.l-stack__minimal > * + * {
  margin-top: 12px;
}

.l-stack__tight > * + * {
  margin-top: 16px;
}

.l-stack__compact > * + * {
  margin-top: 32px;
}

.l-stack__normal > * + * {
  margin-top: 48px;
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
