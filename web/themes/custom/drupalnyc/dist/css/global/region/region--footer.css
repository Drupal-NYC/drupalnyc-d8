@font-face {
  font-family: "League Spartan Variable";
  src: url("/themes/custom/drupalnyc/fonts/LeagueSpartan/variable/WOFF2/LeagueSpartan-VF.woff2") format("woff2-variations");
  font-weight: 200 900;
}
.site-footer {
  position: relative;
}
.site-footer .site-footer__inner {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.site-footer .site-footer__content {
  flex: initial;
}
.site-footer .site-footer__logo {
  display: block;
  width: -moz-fit-content;
  width: fit-content;
}
.site-footer .site-footer__logo img {
  display: block;
  max-height: 3.75rem;
  max-width: 3.75rem;
  width: 100%;
}
.site-footer .sponsor-linked-logo {
  width: 12.5rem;
}
.site-footer .sponsor-linked-logo img {
  max-height: 3.75rem;
}
.site-footer .amazee-link {
  color: var(--dnyc-color-black);
  font-size: var(--dnyc-fw-light);
  -webkit-text-decoration: none;
  text-decoration: none;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.site-footer .amazee-link span {
  font-size: 0.8rem;
  display: inline-block;
}
.site-footer .amazee-link img {
  display: block;
}
.site-footer .amazee-image {
  max-width: 200px;
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
