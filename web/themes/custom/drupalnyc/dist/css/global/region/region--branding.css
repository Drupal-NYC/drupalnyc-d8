@font-face {
  font-family: "League Spartan Variable";
  src: url("/themes/custom/drupalnyc/fonts/LeagueSpartan/variable/WOFF2/LeagueSpartan-VF.woff2") format("woff2-variations");
  font-weight: 200 900;
}
.site-branding {
  align-items: center;
  display: flex;
  height: -moz-fit-content;
  height: fit-content;
  justify-content: center;
  margin: 0;
  padding: 0;
  width: var(--size-width, 5.625rem);
  z-index: 1;
}
@media (min-width: 992px) {
  .site-branding {
    width: 7.5rem;
    max-width: 18.75rem;
  }
}
.site-branding a,
.site-branding img {
  display: block;
  width: 100%;
}
@media (min-width: 768px) {
  .site-branding a,
  .site-branding img {
    min-width: 7.5rem;
  }
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
