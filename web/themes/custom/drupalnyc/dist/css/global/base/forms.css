form > * + *,
form .form-item + .form-item {
  margin-top: var(--dnyc-gap-small);
}
@media (min-width: 992px) {
  form > * + *,
  form .form-item + .form-item {
    margin-top: var(--dnyc-gap-large);
  }
}

label,
legend {
  font-size: var(--dnyc-fs-label-16);
  line-height: var(--dnyc-lh-label-16);
  display: block;
  font-weight: var(--dnyc-fw-bold);
  margin-bottom: 0;
}

input,
textarea {
  font-size: var(--dnyc-fs-label-16);
  line-height: var(--dnyc-lh-label-16);
  background-color: var(--dnyc-color-white);
  border: solid 1px var(--dnyc-color-dark);
  border-radius: 0;
  max-width: 100%;
  padding: 8px 12px;
}

textarea {
  display: block;
  width: 100%;
}

input[type=text],
input[type=password],
input[type=date],
input[type=email],
input[type=number] {
  height: auto;
}

input[type=file] {
  height: inherit;
}

select {
  font-size: var(--dnyc-fs-label-16);
  line-height: var(--dnyc-lh-label-16);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: var(--dnyc-color-white);
  border-radius: 0;
  color: var(--dnyc-color-black);
  padding: 8px 12px;
  text-indent: 0.01px;
  text-overflow: "";
}

select::-ms-expand {
  display: none;
}

.form-type__checkbox,
.form-type__radio {
  position: relative;
}
.form-type__checkbox input,
.form-type__radio input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  height: 100%;
  left: 0;
  margin: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: var(--dnyc-zindex-default);
}
.form-type__checkbox label:before,
.form-type__radio label:before {
  border: var(--dnyc-color-dark);
  content: "";
  display: block;
  float: left;
  height: 16px;
  margin-right: 12px;
  width: 16px;
}

.form-type__checkbox label:before {
  background: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22var%28--dnyc-color-white%29%22%3E%3Cpath%20d%3D%22M9%2016.219l10.594-10.641%201.406%201.406-12%2012-5.578-5.578%201.359-1.406z%22%2F%3E%3C%2Fsvg%3E%20") no-repeat center var(--dnyc-color-white);
  background-size: 80%;
  border: var(--dnyc-color-dark);
  float: left;
  height: 16px;
  margin-right: 12px;
  width: 16px;
}
.form-type__checkbox input:checked + label:before {
  background: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22var%28--dnyc-color-white%29%22%3E%3Cpath%20d%3D%22M9%2016.219l10.594-10.641%201.406%201.406-12%2012-5.578-5.578%201.359-1.406z%22%2F%3E%3C%2Fsvg%3E%20") no-repeat center var(--dnyc-color-dark);
}

.form-type__radio label:before {
  background: var(--dnyc-color-white);
  border-radius: 50%;
  box-shadow: inset 0 0 0 3px var(--dnyc-color-white);
}
.form-type__radio input:checked + label:before {
  background: var(--dnyc-color-dark);
}

.description {
  font-size: var(--dnyc-fs-label-14);
  line-height: var(--dnyc-lh-label-14);
}

.password-strength__meter {
  background-color: var(--dnyc-color-gray-100);
}

.password-strength__indicator.is-fair {
  background-color: var(--dnyc-color-yellow);
}
.password-strength__indicator.is-strong {
  background-color: var(--dnyc-color-green);
}
.password-strength__indicator.is-good {
  background-color: var(--dnyc-color-green);
}
.password-strength__indicator.is-weak {
  background-color: var(--dnyc-color-red);
}

.password-confirm,
.password-strength__title {
  font-size: var(--dnyc-fs-label-14);
  line-height: var(--dnyc-lh-label-14);
}

.password-strength__text {
  font-weight: var(--dnyc-fw-bold);
}

.password-confirm > span {
  font-weight: var(--dnyc-fw-bold);
}
.password-confirm > span.error {
  color: var(--dnyc-color-red);
}
.password-confirm > span.ok {
  color: var(--dnyc-color-green);
}

.password-suggestions {
  font-size: var(--dnyc-fs-label-14);
  line-height: var(--dnyc-lh-label-14);
  font-weight: var(--dnyc-fw-bold);
}
.password-suggestions > ul {
  font-weight: var(--dnyc-fw-regular);
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
