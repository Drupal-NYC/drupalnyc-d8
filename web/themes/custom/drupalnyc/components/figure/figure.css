@font-face {
  font-family: "League Spartan Variable";
  src: url("/themes/custom/drupalnyc/fonts/LeagueSpartan/variable/WOFF2/LeagueSpartan-VF.woff2") format("woff2-variations");
  font-weight: 200 900;
}
.c-figure figure {
  display: block;
}
.c-figure figcaption {
  caption-side: bottom;
  position: relative;
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
