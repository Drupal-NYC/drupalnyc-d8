{"version":3,"file":"components/search-bar/search-bar.js","mappings":";AAAA,CAAC,UAACA,MAAM,EAAEC,IAAI,EAAK;EACjBD,MAAM,CAACE,SAAS,CAACC,SAAS,GAAG;IAC3BC,MAAM,WAANA,MAAMA,CAACC,OAAO,EAAEC,SAAS,EAAE;MACzB;MACAL,IAAI,CAAC,WAAW,EAAE,uBAAuB,EAAEI,OAAO,CAAC,CAACE,OAAO,CACzD,UAACC,YAAY,EAAK;QAChB;QACA,IAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAU,CAAC,qBAAqB,CAAC;QACzD,IAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAC3CN,YAAY,CAACO,YAAY,CAAC,eAAe,CAC3C,CAAC;QACD,IAAMC,WAAW,GAAGJ,aAAa,CAACK,gBAAgB,CAAC,OAAO,CAAC;;QAE3D;QACA,IAAIR,QAAQ,CAACS,OAAO,EAAE;UACpBN,aAAa,CAACO,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC;QAClD;QACAX,YAAY,CAACY,gBAAgB,CAAC,OAAO,EAAE,YAAM;UAC3C,IAAMC,UAAU,GACdb,YAAY,CAACO,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM;UACvDP,YAAY,CAACW,YAAY,CAAC,eAAe,EAAE,CAACE,UAAU,CAAC;UACvD,IAAI,CAACZ,QAAQ,CAACS,OAAO,EAAE;YACrBN,aAAa,CAACO,YAAY,CAAC,aAAa,EAAEE,UAAU,CAAC;UACvD;UACA;UACAL,WAAW,CAACT,OAAO,CAAC,UAACe,UAAU,EAAK;YAClC,IAAID,UAAU,EAAE;cACdC,UAAU,CAACH,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACzC,CAAC,MAAM;cACLG,UAAU,CAACH,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC;YACxC;UACF,CAAC,CAAC;UACFX,YAAY,CAACe,aAAa,CACxB,4BACF,CAAC,CAACC,WAAW,GAAG,CAACH,UAAU,GAAG,cAAc,GAAG,eAAe;UAE9D,IAAI,CAACA,UAAU,EAAE;YACfhB,OAAO,CAACe,gBAAgB,CAAC,SAAS,EAAEK,WAAW,EAAE,IAAI,CAAC;UACxD;QACF,CAAC,CAAC;;QAEF;QACA,SAASA,WAAWA,CAACC,CAAC,EAAE;UACtB,IAAIA,CAAC,CAACC,GAAG,IAAI,QAAQ,IAAID,CAAC,CAACC,GAAG,IAAI,KAAK,EAAE;YACvCtB,OAAO,CAACuB,mBAAmB,CAAC,SAAS,EAAEH,WAAW,EAAE,IAAI,CAAC;YACzDjB,YAAY,CAACW,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;YACnD,IAAI,CAACV,QAAQ,CAACS,OAAO,EAAE;cACrBN,aAAa,CAACO,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;YACnD;YACA;YACAH,WAAW,CAACT,OAAO,CAAC,UAACe,UAAU,EAAK;cAClCA,UAAU,CAACH,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC;YACFX,YAAY,CAACe,aAAa,CACxB,4BACF,CAAC,CAACC,WAAW,GAAG,eAAe;;YAE/B;YACAhB,YAAY,CAACqB,KAAK,CAAC,CAAC;UACtB;QACF;MACF,CACF,CAAC;IACH;EACF,CAAC;AACH,CAAC,EAAE7B,MAAM,EAAEC,IAAI,CAAC,C","sources":["webpack://drupalnyc/./components/search-bar/src/search-bar.js"],"sourcesContent":["((Drupal, once) => {\n  Drupal.behaviors.barSearch = {\n    attach(context, _settings) {\n      // Search bar Expand/Collapse functionality\n      once('searchbar', '.c-search-bar__button', context).forEach(\n        (searchToggle) => {\n          // Mobile Media Query\n          const isMobile = window.matchMedia('(max-width: 1023px)');\n          const searchContent = document.getElementById(\n            searchToggle.getAttribute('aria-controls')\n          );\n          const inputFields = searchContent.querySelectorAll('input');\n\n          // If on mobile always display search content\n          if (isMobile.matches) {\n            searchContent.setAttribute('aria-hidden', false);\n          }\n          searchToggle.addEventListener('click', () => {\n            const isExpanded =\n              searchToggle.getAttribute('aria-expanded') === 'true';\n            searchToggle.setAttribute('aria-expanded', !isExpanded);\n            if (!isMobile.matches) {\n              searchContent.setAttribute('aria-hidden', isExpanded);\n            }\n            // For each inputField set tabindex to -1\n            inputFields.forEach((inputField) => {\n              if (isExpanded) {\n                inputField.setAttribute('tabindex', -1);\n              } else {\n                inputField.setAttribute('tabindex', 0);\n              }\n            });\n            searchToggle.querySelector(\n              '.c-search-bar__button-text'\n            ).textContent = !isExpanded ? 'Close Search' : 'Expand Search';\n\n            if (!isExpanded) {\n              context.addEventListener('keydown', closeSearch, true);\n            }\n          });\n\n          // Listen for escape key to close search\n          function closeSearch(e) {\n            if (e.key == 'Escape' || e.key == 'Esc') {\n              context.removeEventListener('keydown', closeSearch, true);\n              searchToggle.setAttribute('aria-expanded', 'false');\n              if (!isMobile.matches) {\n                searchContent.setAttribute('aria-hidden', 'true');\n              }\n              // For each inputField set tabindex to -1\n              inputFields.forEach((inputField) => {\n                inputField.setAttribute('tabindex', -1);\n              });\n              searchToggle.querySelector(\n                '.c-search-bar__button-text'\n              ).textContent = 'Expand Search';\n\n              // Set focus for keyboard users\n              searchToggle.focus();\n            }\n          }\n        }\n      );\n    },\n  };\n})(Drupal, once);\n"],"names":["Drupal","once","behaviors","barSearch","attach","context","_settings","forEach","searchToggle","isMobile","window","matchMedia","searchContent","document","getElementById","getAttribute","inputFields","querySelectorAll","matches","setAttribute","addEventListener","isExpanded","inputField","querySelector","textContent","closeSearch","e","key","removeEventListener","focus"],"sourceRoot":""}