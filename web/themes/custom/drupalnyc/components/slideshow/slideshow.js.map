{"version":3,"file":"components/slideshow/slideshow.js","mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,UAACA,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAK;EACzBA,MAAM,CAACC,QAAQ,GAAG;IAChBC,IAAI,EAAE;MACJC,IAAI,EAAE,gBAAgB;MACtBC,IAAI,EAAE;IACR;EACF,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;;EAEEN,MAAM,CAACO,SAAS,CAACC,cAAc,GAAG;IAChC;AACJ;AACA;AACA;AACA;AACA;IACIC,MAAM,WAANA,MAAMA,CAACC,YAAY,EAAE;MACnB,IAAMC,SAAS,GAAG,IAAIT,MAAM,CAACQ,YAAY,CAAC;MAC1CC,SAAS,CAACC,KAAK,CAAC,CAAC;MAEjB,IAAIC,MAAM,GAAGH,YAAY,CAACI,aAAa,CAAC,iBAAiB,CAAC;MAE1D,IAAID,MAAM,EAAE;QACV,IAAIE,WAAW,GAAG,WAAW;;QAE7B;QACAJ,SAAS,CAACK,EAAE,CAAC,eAAe,EAAE,YAAY;UACxCH,MAAM,CAACI,SAAS,CAACC,MAAM,CAACH,WAAW,CAAC;UACpCF,MAAM,CAACM,YAAY,CAAC,YAAY,EAAEnB,MAAM,CAACoB,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC/D,CAAC,CAAC;;QAEF;QACAT,SAAS,CAACK,EAAE,CAAC,gBAAgB,EAAE,YAAY;UACzCH,MAAM,CAACI,SAAS,CAACI,GAAG,CAACN,WAAW,CAAC;UACjCF,MAAM,CAACM,YAAY,CAAC,YAAY,EAAEnB,MAAM,CAACoB,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC/D,CAAC,CAAC;MACJ;MAEA,IAAME,eAAe,GAAGZ,YAAY,CAACI,aAAa,CAAC,iBAAiB,CAAC;MACrE,IAAIQ,eAAe,EAAE;QACnB,IAAMC,KAAK,GAAGb,YAAY,CAACI,aAAa,CAAC,gBAAgB,CAAC;QAC1D,IAAMU,OAAO,GAAGD,KAAK,CAACE,YAAY,CAAC,IAAI,CAAC;QACxCH,eAAe,CAACH,YAAY,CAAC,eAAe,EAAEK,OAAO,CAAC;MACxD;IACF,CAAC;IAED;AACJ;AACA;AACA;AACA;IAEIE,MAAM,WAANA,MAAMA,CAACC,OAAO,EAAE;MAAA,IAAAC,KAAA;MACd3B,IAAI,CAAC,gBAAgB,EAAE,cAAc,EAAE0B,OAAO,CAAC,CAACE,OAAO,CAAC,UAACpB,MAAM,EAAK;QAClE,IAAIA,MAAM,CAACqB,MAAM,KAAK,CAAC,EAAE;UACvB;QACF;QACAF,KAAI,CAACnB,MAAM,CAACA,MAAM,CAAC;MACrB,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC,EAAET,MAAM,EAAEC,IAAI,EAAEC,MAAM,CAAC,C","sources":["webpack://drupalnyc/./components/slideshow/src/slideshow.js"],"sourcesContent":["/**\n * Components - Slider\n * Establishing a working library in order to attach the Splide slider\n * JavaScript library wherever needed. Splide controls, structure and other\n * documentation can be found at https://splidejs.com/guides/getting-started/\n *\n * - 01 - Globals\n * - 02 - Splide\n */\n\n/*------------------------------------*\n  01 - Globals\n  Declared functions here will be used throughout the rest of this JavaScript\n  document, throughout each declared behavior.\n\\*------------------------------------*/\n((Drupal, once, Splide) => {\n  Splide.defaults = {\n    i18n: {\n      prev: 'Previous slide',\n      next: 'Next slide',\n    },\n  };\n\n  /*------------------------------------*\\\n  02 - Splide\n  Taking the external Splide NPM package library and using it to instantiate\n  instances wherever necessary, with addition logic and functionality also\n  attached.\n\\*------------------------------------*/\n\n  Drupal.behaviors.slideshowMedia = {\n    /**\n     * Slider\n     * Mounting function for Splide sliders. Also contains functionality for\n     * pagination numbering counter.\n     * @param givenElement: [object] Slider wrapper to act upon.\n     */\n    slider(givenElement) {\n      const slideshow = new Splide(givenElement);\n      slideshow.mount();\n\n      let button = givenElement.querySelector('.splide__toggle');\n\n      if (button) {\n        let pausedClass = 'is-paused';\n\n        // Remove the paused class and change the label to \"Pause\".\n        slideshow.on('autoplay:play', function () {\n          button.classList.remove(pausedClass);\n          button.setAttribute('aria-label', Drupal.t('Pause Autoplay'));\n        });\n\n        // Add the paused class and change the label to \"Play\".\n        slideshow.on('autoplay:pause', function () {\n          button.classList.add(pausedClass);\n          button.setAttribute('aria-label', Drupal.t('Start Autoplay'));\n        });\n      }\n\n      const playPauseButton = givenElement.querySelector('.splide__toggle');\n      if (playPauseButton) {\n        const track = givenElement.querySelector('.splide__track');\n        const trackId = track.getAttribute('id');\n        playPauseButton.setAttribute('aria-controls', trackId);\n      }\n    },\n\n    /*\n     * Attach\n     * Final build to the site for display within Drupal context.\n     * - @param context: Website document context.\n     */\n\n    attach(context) {\n      once('slideshowMedia', '.c-slideshow', context).forEach((slider) => {\n        if (slider.length === 0) {\n          return;\n        }\n        this.slider(slider);\n      });\n    },\n  };\n})(Drupal, once, Splide);\n"],"names":["Drupal","once","Splide","defaults","i18n","prev","next","behaviors","slideshowMedia","slider","givenElement","slideshow","mount","button","querySelector","pausedClass","on","classList","remove","setAttribute","t","add","playPauseButton","track","trackId","getAttribute","attach","context","_this","forEach","length"],"sourceRoot":""}