.c-accordion-group .c-accordion-group__title {
  font-size: var(--dnyc-fs-heading-h2);
  line-height: var(--dnyc-lh-heading-h2);
  margin-bottom: 1rem;
}
.c-accordion-group .c-accordion-group__wrapper {
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
